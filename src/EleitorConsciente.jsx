import { useState } from "react";

export default function EleitorConsciente() {
  const perguntasOriginais = [
    { pergunta: "Qual destas correntes acredita que a prote√ß√£o dos valores crist√£os deve orientar a pol√≠tica p√∫blica?", correta: "Democracia Crist√£" },
    { pergunta: "Que corrente valoriza a tradi√ß√£o, a estabilidade social e o respeito pelas institui√ß√µes familiares e religiosas?", correta: "Conservadorismo" },
    { pergunta: "Qual destas correntes valoriza mais a liberdade individual e o funcionamento do mercado com m√≠nima interven√ß√£o do Estado?", correta: "Liberalismo" },
    { pergunta: "Qual destas ideologias defende que o progresso social deve ser alcan√ßado atrav√©s de reformas democr√°ticas e redistribui√ß√£o de riqueza?", correta: "Socialismo democr√°tico" },
    { pergunta: "Qual destas ideologias prop√µe mudan√ßas profundas na estrutura econ√≥mica e social, mesmo que isso implique restri√ß√µes tempor√°rias √† liberdade individual?", correta: "Socialismo radical" },
    { pergunta: "Que ideologia defende uma sociedade sem classes atrav√©s da propriedade coletiva dos meios de produ√ß√£o?", correta: "Comunismo" },
    { pergunta: "Qual destas ideologias defende que a justi√ßa social deve centrar-se na corre√ß√£o de desigualdades ligadas √† identidade (ra√ßa, g√©nero, orienta√ß√£o sexual)?", correta: "Progressismo" },
    { pergunta: "Qual destas ideologias combina preocupa√ß√µes ambientais com justi√ßa social, defendendo a transi√ß√£o ecol√≥gica e equidade?", correta: "Eco-socialismo" },
    { pergunta: "Qual destas correntes considera que o crescimento econ√≥mico deve ser limitado ou revertido em favor da preserva√ß√£o do planeta?", correta: "Ambientalismo radical" },
    { pergunta: "Qual destas ideologias valoriza a ordem social e a manuten√ß√£o de hierarquias tradicionais?", correta: "Conservadorismo" },
    { pergunta: "Qual destas correntes defende uma transi√ß√£o gradual para uma sociedade mais igualit√°ria sem recurso √† revolu√ß√£o?", correta: "Socialismo democr√°tico" },
    { pergunta: "Que ideologia considera que a interven√ß√£o do Estado deve ser m√≠nima, confiando no mercado para organizar a economia?", correta: "Liberalismo" },
    { pergunta: "Qual destas correntes procura eliminar todas as hierarquias sociais atrav√©s da igualdade econ√≥mica extrema?", correta: "Socialismo radical" },
    { pergunta: "Que ideologia moderna √© associada √† defesa ativa de minorias raciais, de g√©nero e sexuais nas pol√≠ticas p√∫blicas?", correta: "Progressismo" },
    { pergunta: "Qual destas ideologias combina a luta ambiental com cr√≠ticas ao capitalismo como causa da crise ecol√≥gica?", correta: "Eco-socialismo" }
  ];

  const [introducao, setIntroducao] = useState(true);
  const [perguntas, setPerguntas] = useState([]);
  const [passo, setPasso] = useState(0);
  const [respostas, setRespostas] = useState([]);
  const [respostaSelecionada, setRespostaSelecionada] = useState(null);

  const mensagensFalha = [
    "A tua ignor√¢ncia √© perigosa para a democracia.",
    "Votar sem saber √© como conduzir de olhos fechados. E tu j√° ias em contram√£o.",
    "Est√°s a um passo de votar num tirano. Vai estudar antes que seja tarde.",
    "Com este n√≠vel, s√≥ devias votar em concursos de TV ‚Äî e mesmo assim com supervis√£o.",
    "Isto n√£o √© uma opini√£o mal formada. √â desinforma√ß√£o ativa. E mata democracias.",
    "A tua cabe√ßa est√° vazia e o boletim de voto cheio. Isso devia assustar toda a gente.",
    "Confundes ideologias b√°sicas e provavelmente votas por influ√™ncia ou impulso.",
    "O teu grau de literacia pol√≠tica √© uma amea√ßa p√∫blica.",
    "Se n√£o sabes distinguir socialismo de liberalismo, n√£o devias decidir o futuro do pa√≠s.",
    "Falhaste mais do que acertaste ‚Äî e isso diz muito. Mas ainda vais a tempo de aprender."
  ];

  const mensagensSucesso = [
    "Est√°s apto para votar. √âs um cidad√£o exemplar, informado e consciente.",
    "Parab√©ns. Mostraste que a pol√≠tica n√£o te passa ao lado ‚Äî √©s parte da solu√ß√£o.",
    "Tu n√£o votas por impulso. Votas com cabe√ßa. E isso vale ouro.",
    "O teu voto tem peso porque vem de algu√©m que pensa. Democracia agradece.",
    "√âs o eleitor que todos os pa√≠ses gostavam de ter.",
    "Mostraste literacia pol√≠tica acima da m√©dia. J√° merecias um lugar na comiss√£o eleitoral.",
    "Sabes o que defendes, sabes o que rejeitas. √âs tudo o que um eleitor devia ser.",
    "A tua consci√™ncia pol√≠tica √© como o teu voto: poderosa.",
    "N√£o guardes isto para ti. Democracia precisa de mais gente como tu.",
    "√âs um bom exemplo para o teu c√≠rculo. Agora convence os outros a estudar tamb√©m."
  ];

  const esquerda = [
    "Comunismo",
    "Socialismo radical",
    "Socialismo democr√°tico",
    "Eco-socialismo",
    "Progressismo",
    "Ambientalismo radical",
  ];

  const centro = [
    "Liberalismo",
    "Democracia Crist√£",
  ];

  const direita = [
    "Conservadorismo",
  ];

  function baralhar(array) {
    return array.sort(() => Math.random() - 0.5);
  }

  function comecarTeste() {
    setPerguntas(baralhar([...perguntasOriginais]));
    setIntroducao(false);
    setPasso(0);
    setRespostas([]);
    setRespostaSelecionada(null);
  }

  const responder = (resposta) => {
    if (respostaSelecionada === null) {
      setRespostaSelecionada(resposta);
      setRespostas([...respostas, resposta]);
    }
  };

  const proxima = () => {
    setPasso(passo + 1);
    setRespostaSelecionada(null);
  };

  const acertos = respostas.filter(
    (resposta, i) => resposta === perguntas[i].correta
  ).length;

  function getTituloPerfil() {
    if (acertos <= 3) return { titulo: "Perigo democr√°tico", cor: "text-red-700" };
    if (acertos <= 5) return { titulo: "Votante em risco", cor: "text-orange-500" };
    if (acertos <= 7) return { titulo: "Eleitor funcional", cor: "text-yellow-500" };
    if (acertos <= 9) return { titulo: "Cidad√£o consciente", cor: "text-green-500" };
    return { titulo: "Exemplo c√≠vico nacional", cor: "text-green-700" };
  }

  const { titulo, cor } = getTituloPerfil();

  if (introducao) {
    return (
      <div className="min-h-screen bg-white text-gray-900 p-6 flex flex-col items-center justify-center">
        <div className="max-w-3xl">
          <h1 className="text-4xl font-bold mb-6 text-center">Eleitor Consciente</h1>
          <p className="mb-4">
            <em>‚ÄúA puni√ß√£o dos bons que n√£o se interessam pela pol√≠tica √© serem governados pelos maus.‚Äù</em> ‚Äî Plat√£o
          </p>
          <p className="mb-4">
            A pol√≠tica n√£o √© um espet√°culo. N√£o √© um jogo de clubes nem um passatempo para distra√≠dos.
          </p>
          <p className="mb-4">
            <strong>Votar n√£o √© um ato de impulso, nem um favor a partidos.</strong> √â uma decis√£o que molda o futuro de milh√µes de pessoas.
          </p>
          <p className="mb-4">
            Se votares sem saber o que defendes, n√£o √©s neutro: est√°s a abrir caminho para a tirania, a injusti√ßa e a ignor√¢ncia.
          </p>
          <p className="mb-4">
            <em>‚ÄúA diferen√ßa entre uma democracia e uma ditadura √© que numa democracia primeiro votamos e depois obedecemos; numa ditadura, n√£o precisamos votar.‚Äù</em> ‚Äî Thomas Jefferson
          </p>
          <p className="mb-4">
            üìö <strong>N√£o √© vergonha estudar. Vergonha √© votar na ignor√¢ncia.</strong>
          </p>
          <p className="mb-8">
            <strong>Se n√£o sabes o que est√°s a fazer, faz um favor a toda a gente e n√£o sejas parte do problema.</strong> Se tens d√∫vidas, vai estudar antes de votar.
          </p>
          <div className="text-center">
            <button
              onClick={comecarTeste}
              className="bg-black hover:bg-gray-800 text-white py-3 px-6 rounded-full text-lg"
            >
              Come√ßar Teste
            </button>
          </div>
        </div>
      </div>
    );
  }

  if (passo < perguntas.length) {
    return (
      <div className="min-h-screen bg-white text-gray-900 p-6 flex flex-col items-center">
        <h1 className="text-4xl font-bold mb-4 text-center">Eleitor Consciente</h1>
        <div className="max-w-4xl w-full">
          <p className="text-xl font-semibold mb-6">{perguntas[passo].pergunta}</p>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
            <div>
              <h3 className="font-bold text-red-600 mb-2">Esquerda</h3>
              {esquerda.map((opcao, index) => renderOpcao(opcao, index))}
            </div>
            <div>
              <h3 className="font-bold text-yellow-600 mb-2">Centro</h3>
              {centro.map((opcao, index) => renderOpcao(opcao, index + 10))}
            </div>
            <div>
              <h3 className="font-bold text-blue-600 mb-2">Direita</h3>
              {direita.map((opcao, index) => renderOpcao(opcao, index + 20))}
            </div>
          </div>

          {respostaSelecionada && (
            <div className="mt-6 text-center">
              {respostaSelecionada === perguntas[passo].correta ? (
                <p className="text-green-600 font-semibold">Certo! ‚úÖ</p>
              ) : (
                <p className="text-red-600 font-semibold">
                  Errado. A resposta correta era: <span className="underline">{perguntas[passo].correta}</span>
                </p>
              )}
              <button
                onClick={proxima}
                className="mt-4 bg-black hover:bg-gray-800 text-white py-2 px-4 rounded-full"
              >
                Pr√≥xima pergunta ‚Üí
              </button>
            </div>
          )}
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-white text-gray-900 p-6 flex flex-col items-center justify-center">
      <h1 className="text-4xl font-bold mb-4 text-center">Eleitor Consciente</h1>
      <div className="text-center">
        <h2 className="text-2xl font-bold mb-2">Teste Conclu√≠do</h2>
        <p className="text-lg mb-1">
          Acertaste {acertos} em {perguntas.length} perguntas.
        </p>
        <p className={`text-xl font-bold mb-4 ${cor}`}>{titulo}</p>
        {acertos > perguntas.length / 2 ? (
          <p className="text-green-600 font-semibold">
            {mensagensSucesso[Math.floor(Math.random() * mensagensSucesso.length)]}
          </p>
        ) : (
          <p className="text-red-600 font-semibold">
            {mensagensFalha[Math.floor(Math.random() * mensagensFalha.length)]}
          </p>
        )}
        <button
          onClick={() => setIntroducao(true)}
          className="mt-8 bg-black hover:bg-gray-800 text-white py-3 px-6 rounded-full text-lg"
        >
          Tentar novamente
        </button>
      </div>
      <footer className="mt-12 text-sm text-gray-500 text-center">
        Projeto independente por cidad√£os que se importam.
      </footer>
    </div>
  );

  function renderOpcao(opcao, index) {
    const correta = perguntas[passo].correta;
    const foiRespondida = respostaSelecionada !== null;
    const corBotao =
      !foiRespondida
        ? "bg-blue-600 hover:bg-blue-700"
        : opcao === correta
        ? "bg-green-600"
        : opcao === respostaSelecionada
        ? "bg-red-600"
        : "bg-gray-300";

    return (
      <button
        key={index}
        onClick={() => responder(opcao)}
        disabled={foiRespondida}
        className={`w-full text-white py-2 px-4 mb-2 rounded-2xl shadow ${corBotao}`}
      >
        {opcao}
      </button>
    );
  }
}
